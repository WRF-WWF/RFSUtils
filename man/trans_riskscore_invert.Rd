% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trans_riskscore_invert.R
\name{trans_riskscore_invert}
\alias{trans_riskscore_invert}
\title{Invert risk score data}
\usage{
trans_riskscore_invert(risk_score, return_fct = FALSE, tol_val = 1e-05, ...)
}
\arguments{
\item{risk_score}{An ordered factor or numeric vector.
For an ordered factor, should be an object of class ordered factor that has
levels specified in the object \link{risk_scores}. For numeric vector, expects
values between 0 and 5.}

\item{return_fct}{Logical. Should data be returned as a factor with the same
levels as the input or as a numeric (default).}

\item{tol_val}{Numeric. Tolerance when comparing decimal values.
Important when checking aggregated data (decimal risk values) to
see if they are between 1-5. Default: 1e-5.}

\item{...}{Placeholder for other arguments. Currently ignored.}
}
\value{
Return inverted values of the risk score, either as a numeric vector
or ordered factor, depending on the value of \code{return_fct}
}
\description{
A wrapper around \code{\link[=trans_num_invert]{trans_num_invert()}} specifically for 1-5 risk score data.
The function will invert all risk scores, except those cases of '0 - No Data'
that will remain unchanged.
}
\examples{
## Create a risk score input
## NOTE: We use a 0 index below to more directly match our risk score levels
## i.e. 0 = no data.
input_data <- factor(risk_scores[c(0, 5, 1) + 1],
                     levels = risk_scores,
                     ordered = TRUE)
input_data

## Invert all values and return numeric
## NOTE: 0 remains unchanged!!
trans_riskscore_invert(input_data) ## 5 becomes 1 and 1 becomes 5

## Invert when we don't cover the full range
## NOTE: Inversion still correct even though we don't have the full range
trans_riskscore_invert(input_data[1:2])

## Return ordered factor instead of numeric
trans_riskscore_invert(input_data[1:2], return_fct = TRUE)

## Example with non-integer values (e.g. geometric mean of two risk values)
trans_riskscore_invert(c(1.25, 0, 4.39))
}
